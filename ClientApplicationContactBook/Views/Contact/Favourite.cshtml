@using ClientApplicationContactBook.ViewModels
@model List<ContactViewModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contact List</title>

    <!-- Your custom CSS -->
    <style>
        .arrowup,
        .arrowdown {
            display: inline-block;
            vertical-align: middle;
            cursor: pointer;
        }

        .arrowup {
            margin-bottom: 17px;
        }

        .arrowdown {
            margin-left: -14px;
            margin-top: 0px;
        }

            .letter.active {
                background-color: black; /* Change to your desired active color */
                color: white; /* Text color for active state */
            }

        .letter {
            cursor: pointer;
        }

        .rounded-image {
            border-radius: 50%;
        }
    </style>
</head>
<body>
<h1>Favourite Contacts</h1>

    <form method="get" class="mt-3">
        @if (ViewBag.DistinctLetters != null && ViewBag.DistinctLetters.Count > 0)
        {
            foreach (char letter in ViewBag.DistinctLetters)
            {
                <button class="btn btn-light letter" type="submit" name="letter" data-letter="@letter" value="@letter">@letter</button>
            }
            <button class="btn btn-light" onclick="location.href='@Url.Action("Index1")'">Show All</button>
        }
        else
        {
            <p>No records found</p>
        }
    </form>
<table class="table table-hover">
    <thead>
        <tr>
           
            <th>
                <span>Contact Name</span>
                <i onclick="sortContacts('asc')" class="fas fa-caret-up arrowup"></i>
                <i onclick="sortContacts('desc')" class="fas fa-caret-down arrowdown"></i>
            </th>
            <th>Image</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count == 0)
        {
            <tr>
                <td colspan="4">No Contacts Found!!!</td>
            </tr>
        }
        else
        {
            @foreach (var contact in Model)
            {
                <tr>
                  
                    <td>@contact.FirstName @contact.LastName</td>
                    <td>
                        @if (contact.Image != string.Empty)
                        {
                            <img src="@Url.Content("~/Uploads/"+@contact.Image)" alt="image" class="rounded-image" width="70" height="100" />
                        }
                        else
                        {
                            <img src="@Url.Content("~/Uploads/Defaultimage.png")" alt="image" class="rounded-image" width="70" height="100" />
                        }
                    </td>
                    <td>
                        <button class="btn btn-outline-info" type="button" onclick="showDetails(@contact.ContactId)">Details</button>
                        <button class="btn btn-outline-primary" onclick="location.href='@Url.Action("Edit", new { id = contact.ContactId })'">Edit</button>
                        <button class="btn btn-outline-danger" onclick="location.href='@Url.Action("Delete", new { id = contact.ContactId })'">Delete</button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<div class="offcanvas offcanvas-start bg-dark text-light" data-bs-scroll="true" tabindex="-1" id="offcanvasWithBothOptions" aria-labelledby="offcanvasWithBothOptionsLabel">
    <div class="offcanvas-header">
        <button type="button" class="btn-close  bg-light" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body" id="detailsBody">
    </div>
</div>

<div>
    <button class="btn btn-primary pull-right" onclick="location.href='@Url.Action("Create")'">Add</button>
    <button class="btn btn-primary pull-right" onclick="location.href='@Url.Action("Index1")'">Back to All Contacts</button>
</div>

<!-- Pagination -->
@if(Model.Count != 0){

<div>
    <!-- Page size dropdown -->
    <label for="pageSize">Page Size:</label>
    <select id="pageSize" onchange="changePageSize(this)">
        <option value="2">2</option>
        <option value="4">4</option>
        <option value="6">6</option>
        <!-- Add more options as needed -->
    </select>
    <ul class="pagination">
        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            <li class="page-item @(i == ViewBag.Page ? "active" : "")">
                    <a class="page-link" href="/Contact/Favourite?letter=@ViewBag.Letter&page=@i&pageSize=@ViewBag.PageSize&sortOrder=@ViewBag.SortOrder">@i</a>
            </li>
        }
    </ul>
</div>
}

<style>
    .letter {
        cursor: pointer;
    }

    .rounded-image {
        border-radius: 50%;
    }
</style>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script>
        $(document).ready(function () {
            // Event handler for letter buttons
            $('.letter').on('click', function () {
                // Remove active class from all letter buttons
                $('.letter').removeClass('active');

                // Add active class to the clicked letter button
                $(this).addClass('active');

                // Submit the form when a letter button is clicked
                $(this).closest('form').submit();
            });

            // Function to highlight the active letter button on page load
            var activeLetter = '@(ViewBag.Letter)';
            if (activeLetter) {
                $('.letter').each(function () {
                    if ($(this).data('letter') === activeLetter) {
                        $(this).addClass('active');
                        return false; // Exit the loop once found
                    }
                });
            }
        });

    function sortContacts(order) {
        var currentUrl = window.location.href;
        var newUrl;

        // Check if the current URL already contains a sortOrder parameter
        if (currentUrl.includes("sortOrder")) {
            // If sortOrder parameter exists, replace its value with the new order
            newUrl = currentUrl.replace(/sortOrder=[^\&]+/, "sortOrder=" + order);
        } else {
            // If sortOrder parameter does not exist, add it to the URL
            newUrl = currentUrl + (currentUrl.includes("?") ? "&" : "?") + "sortOrder=" + order;
        }

        // Redirect to the new URL
        window.location.href = newUrl;
    }
    function showDetails(contactId) {
        $.ajax({
            url: '@Url.Action("Details", "Contact")',
            type: 'GET',
            data: { id: contactId },
            success: function (data) {
                $('#detailsBody').html(data);
                var offcanvas = new bootstrap.Offcanvas(document.getElementById('offcanvasWithBothOptions'));
                offcanvas.show();
            },
            error: function (xhr, textStatus, errorThrown) {
                console.error('Error fetching details:', errorThrown);
            }
        });
    }

    document.addEventListener("DOMContentLoaded", function () {
        var currentPageSize = @(ViewBag.PageSize); // Get current page size from ViewBag
        var pageSizeDropdown = document.getElementById("pageSize");
        // Set selected option based on current page size
        for (var i = 0; i < pageSizeDropdown.options.length; i++) {
            if (pageSizeDropdown.options[i].value === currentPageSize.toString()) {
                pageSizeDropdown.selectedIndex = i;
                break;
            }
        }
    });

    function changePageSize(select) {
        var pageSize = select.value;
        var currentPage = @(ViewBag.CurrentPage);
        var letter = "@ViewBag.Letter";
        window.location.href = "/Contact/Favourite?page=" + currentPage + "&pageSize=" + pageSize + "&letter=" + letter;
    }
</script>
</body>
</html>
