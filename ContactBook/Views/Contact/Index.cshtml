@model List<Contact>
@{
    // Generate links for each alphabet letter
    List<char> alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToList();
}
<h1>Contacts</h1>
<form method="get">
@foreach (char letter in alphabet)
{
    
     <button class="btn btn-light letter" type="submit" name="letter" data-letter="@letter" value="@letter">@letter</button>
    //<a href="#" class="btn btn-light letter" data-letter="@letter">@letter</a>
}
<button class="btn btn-light" type="submit" name="letter" value="">Show All</button>
@* <button class="btn btn-light" onclick="location.href='@Url.Action("Index")'">Show All</button> *@
</form>

            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Contact ID</th>
                        <th>Contact Name</th>
                      
                            <th>Action</th>
                        
                    </tr>
                </thead>
                <tbody>
                    @foreach (var contact in Model)
                    {
                        <tr>
                            <td>@contact.ContactId</td>
                            <td>
                               @contact.FirstName @contact.LastName
                            </td>
                            <td>
                                <button class="btn btn-default" onclick="location.href='@Url.Action("Details", new { id = contact.ContactId })'">Details</button>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <button class="btn btn-default" onclick="location.href='@Url.Action("Edit", new { id = contact.ContactId })'">Edit</button>

                                    <button class="btn btn-danger" onclick="location.href='@Url.Action("Delete", new { id = contact.ContactId })'">Delete</button>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
       
       
        <div>        
                <button class="btn btn-primary pull-right" onclick="location.href='@Url.Action("Create")'">Add</button         
        </div>
   
<!-- Pagination -->
<div>
    <!-- Page size dropdown -->
    <label for="pageSize">Page Size:</label>
    <select id="pageSize" onchange="changePageSize(this)">
        <option value="2">2</option>
        <option value="4">4</option>
        <option value="6">6</option>
        <!-- Add more options as needed -->
    </select>
    <ul class="pagination">
        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            <li class="page-item @(i == ViewBag.Page ? "active" : "")">
                <a class="page-link" href="/Contact/Index?page=@i&pageSize=@ViewBag.PageSize&letter=@ViewBag.Letter">@i</a>
            </li>
        }
    </ul>
</div>


<style>
    .letter {
        cursor: pointer;
    }
</style>

<script>
     document.addEventListener("DOMContentLoaded", function () {
        var currentPageSize = @(ViewBag.PageSize); // Get current page size from ViewBag
        var pageSizeDropdown = document.getElementById("pageSize");
        // Set selected option based on current page size
        for (var i = 0; i < pageSizeDropdown.options.length; i++) {
            if (pageSizeDropdown.options[i].value === currentPageSize.toString()) {
                pageSizeDropdown.selectedIndex = i;
                break;
            }
        }
    });
    function changePageSize(select) {
        var pageSize = select.value;
        var currentPage = @(ViewBag.CurrentPage);
        var letter = "@ViewBag.Letter";
        window.location.href = "/Contact/Index?page=" + currentPage + "&pageSize=" + pageSize + "&letter=" + letter;
    }
</script>
